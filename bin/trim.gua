#!/usr/local/bin/guash
#
# trim.gua
#
#     This script removes trelling space from a line and save each line in another file .
#
# Copyright (C) 2019 Roberto Luiz Souza Monteiro; Hernane Borges de Barros Pereira
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# RCS: @(#) $Id: trim.gua,v 1.0 2019/10/01 14:58:00 monteiro Exp $
#

#
# Configuration variables.
#
input_file = "noname"
output_file = "output"
separator = ";"


#
# Main program.
#
if (argc < 3) {
    println("Usage: trim option1 value1 [option1 value1]")
    exit
}

i = 2

while (i < argc) {
    if ((argv[i] == "-h") || (argv[i] == "--help")) {
        println("Usage: trim option1 value1 [option1 value1]")
        println("-h    --help         show the options sumary")
        println("-i                   input file")
        println("-o                   output file")
        exit(0)
    } elseif (argv[i] == "-i") {
        i = i + 1
        input_file = argv[i]
    } elseif (argv[i] == "-o") {
        i = i + 1
        output_file = argv[i]
    }
    i = i + 1
} 

# Check if the input file name was suplied.
if (input_file == "noname") {
    println("Error: input file name is mandatory.")
    exit(1)
}

# Pass 1: process file.
fi = fopen(input_file, "r")
fo = fopen(output_file, "w")

column_source = ""

while (!feof(fi)) {
    if ((line = fgets(fi)) == NULL) { 
        break
    }

    record = trim(line, " \t\r\n")
    
    if (length(record) != 0) {
        fputs(record + "\n", fo)
    }
}


fi = fclose(fi)
fo = fclose(fo)

exit(0)

