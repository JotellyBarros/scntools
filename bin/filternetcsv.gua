#!/usr/local/bin/guash
#
# filternetcsv.gua
#
#     This script filters a CSV network file based a given second CSV file.
#
# Copyright (C) 2011 Roberto Luiz Souza Monteiro.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# RCS: @(#) $Id: filternetcsv.gua,v 1.1 2012/02/13 12:50:00 monteiro Exp $
#

#
# Configuration variables.
#
input_file1 = "noname"
input_file2 = "noname"
output_file = "output.csv"
file1sep = ","
file2sep = ","
file3sep = ","
file2c1 = 0

#
# Main program.
#
if (argc < 3) {
    println("Usage: filternetcsv option1 value1 [option1 value1]")
    exit
}

i = 2

while (i < argc) {
    if ((argv[i] == "-h") || (argv[i] == "--help")) {
        println("Usage: filternetcsv option1 value1 [option1 value1]")
        println("-h    --help        show the options sumary")
        println("      --i1          first input file")
        println("      --i2          second input file")
        println("-o                  output file")
        println("      --file1sep    first file field separator(default=\",\")")
        println("      --file2sep    second file field separator(default=\",\")")
        println("      --file3sep    output file field separator(default=\",\")")
        println("      --file2c1     second file column number(default=0)")
        exit(0)
    } elseif (argv[i] == "--i1") {
        i = i + 1
        input_file1 = argv[i]
    } elseif (argv[i] == "--i2") {
        i = i + 1
        input_file2 = argv[i]
    } elseif (argv[i] == "-o") {
        i = i + 1
        output_file = argv[i]
    } elseif (argv[i] == "--file1sep") {
        i = i + 1
        file1sep = argv[i]
    } elseif (argv[i] == "--file2sep") {
        i = i + 1
        file2sep = argv[i]
    } elseif (argv[i] == "--file3sep") {
        i = i + 1
        file3sep = argv[i]
    } elseif (argv[i] == "--file2c1") {
        i = i + 1
        file2c1 = eval(argv[i])
    }
    i = i + 1
}

# Check if the input file name was suplied.
if (input_file1 == "noname") {
    println("Error: input file 1 name is mandatory.")
    exit(1)
}
if (input_file2 == "noname") {
    println("Error: input file 2 name is mandatory.")
    exit(1)
}

# Generate the NetCSV file.
f1 = fopen(input_file1, "r")
f2 = fopen(input_file2, "r")
ft = fopen(output_file, "w")

if((line1 = fgets(f1)) == NULL) {
    f1 = fclose(f1)
    f2 = fclose(f2)
    ft = fclose(ft)
    println("Error: can not read file " + input_file1)
    exit(1)
}

while (!feof(f1)) {
    if ((line1 = fgets(f1)) == NULL) {
        break
    }

    record1 = split(line1, file1sep)

    f1column1 = eval(record1[0])
    f1column2 = eval(record1[1])

    found1 = FALSE
    found2 = FALSE

    line2 = fgets(f2)
        
    while (!feof(f2)) {
        if ((line2 = fgets(f2)) == NULL) {
            break
        }

        record2 = split(line2, file2sep)

        f2column1 = eval(record2[file2c1])

        if (f1column1 == f2column1) {
            found1 = TRUE
            break
        }
    }
    
    rewind(f2)

    line2 = fgets(f2)
        
    while (!feof(f2)) {
        if ((line2 = fgets(f2)) == NULL) {
            break
        }

        record2 = split(line2, file2sep)

        f2column1 = eval(record2[file2c1])

        if (f1column2 == f2column1) {
            found2 = TRUE
            break
        }
    }
    
    rewind(f2)

    if (found1 && found2) {
        fputs("\"" + f1column1 + "\"" + file3sep + "\"" + f1column2 + "\"" + "\n", ft)
    }
}

f1 = fclose(f1)
f2 = fclose(f2)
ft = fclose(ft)

